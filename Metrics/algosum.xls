Scale	"LinkedCircle, Integer Overflow"
get it optimally or easy solution  \n\n3rdBrush	"optimal/easy: observe, recall, reduction, extension, solution: find invariant and solve iter/recur"
	
make it correct	"For each or trick things:\n1) rotated array find target\n\nfind all the testcases exactly\ncheck left and right first, and compare with mid seperately to choose\nfor each checkpoint, make sure you got the full \n2) makesure have correct statement\n3) make sure up updated last correctly\n"
read/write statement carefully	"randomly and fairly , search smartly by thinking property basically and in keys with memory, exclusive?"
https://www.hackerrank.com/work/codepair	
lockfreeStack\n\nLinkedList \nupdate head\n\nenumerate the direction of solution and try it; know the assumption and verify it\nmy assumption:  if true then update\nwhy not be boxing and loop	"\npop() {\n\n}\n\npush(val) {\nupdate = new Node(val);\ndo {\nheadOld = head;\n\nupdate.next = headOld.next; \nhead = update\n\nwhile(!head.compareAndSet(headOld, update));\n\n}"
coniinuous 4 balls	preprocessing and next pass to verify in diff directions
mistakes	"costs -> cost\nfailrly->fairly\nprivate static void\nn == 0 || costs[0]\nMath.min\nint[], ArrayList. add\nfor (int k = 0; k < m; k++) {\n\n                    if (k == j) continue;\n\n                    min = Math.min(min, prev[k]);\n\n                }\n\n int min = Integer.MAX_VALUE;\n\n"
90% accurate for E	"Mistake: isBST(left, min, root.val); \n        isBST(right, root,val,max); \nreturn isBST() & isBST()"
